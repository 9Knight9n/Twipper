version: '3.7'
services:
    web:
        build:
            context: ./backend
            dockerfile: ../docker/django/Dockerfile
        command: python manage.py runserver 0.0.0.0:8000
        ports:
            - "8000:8000"
        volumes:
            - ./backend:/app
            - static_volume:/app/static
            - media_volume:/app/media
        depends_on:
            - db


    db:
        image: postgres:14.2-bullseye
        environment:
            POSTGRES_USER: 'dbadmin'
            POSTGRES_PASSWORD: 'rS9ytkgUxFo9z#'
            POSTGRES_DB: 'TwipperDB'
            PGDATA: /var/lib/postgresql/data/pgdata
        ports:
            - "3002:5432"
        volumes:
            - data_volume:/var/lib/postgresql/data
        restart: unless-stopped


    pgadmin:
        image: dpage/pgadmin4:latest
        environment:
            PGADMIN_DEFAULT_EMAIL: 'admin@mail.com'
            PGADMIN_DEFAULT_PASSWORD: 'admin'
            PGADMIN_CONFIG_SERVER_MODE: 'False'
        volumes:
            - pgadmin_volume:/var/lib/pgadmin
            - ./docker/postgresql/backup:/tmp/backup
        ports:
            - "8080:80"
        restart: unless-stopped
        depends_on:
            - db

    npm:
        build:
            context: ./frontend
            dockerfile: ../docker/npm/Dockerfile
        command: npm start
#        command: serve -s build
        volumes:
            - ./frontend:/app
            - npm_node_modules:/app/node_modules
        ports:
            - "3001:3000"
#        environment:
#            WATCHPACK_POLLING: "true"
        depends_on:
            - web


volumes:
    static_volume:
    media_volume:
    data_volume:
    pgadmin_volume:
    npm_node_modules: